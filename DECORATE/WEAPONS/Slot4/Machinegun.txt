//Changes made:
//select,deselect
ACTOR Machinegun : BrutalWeapon 
{
	Weapon.SelectionOrder 600
	Weapon.AmmoType1 "Clip2"
	Weapon.AmmoGive1 0
	Weapon.AmmoUse1 0
	Weapon.AmmoType2 "AmmoRocket"
	Weapon.AmmoGive2 0
	Weapon.AmmoUse2 0
	+WEAPON.NOAUTOAIM
	//+WEAPON.NOAUTOFIRE
	+FORCEXYBILLBOARD
	+WEAPON.ALT_AMMO_OPTIONAL
	Inventory.PickupSound "LMGUP"
	Inventory.PickupMessage "You got the Machine Gun! (Slot 4)"
	Obituary "%o was mowed down by %k's Machine Gun."
	AttackSound "none"
	Scale 0.7
	Tag "MachineGun"
	Inventory.AltHUDIcon "MGN1Z0"
	BrutalWeapon.weight 7
	States
	{
	
	GrenadeThrowFlash:
	MGS1 BCDE 1
	TNT1 A 24
	MGS1 EDCB 1//32 in total
	stop
	
	KickingFlash:
	MGN1 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"KickAngled")
	MGN1 GHIJLMMMMMMLJIHG 1
	Goto Ready
	KickAngled:
	MGN4 OPQRSSSSSSSSRQPO 1
	Goto Ready
	
	AirKickingFlash:
	MGN1 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"AirKickAngled")
	    MGN1 GHIJLMMMMMMMMLJIHG 1 //18
	    Goto Ready
	AirKickAngled:
	MGN4 OPQRSSSSSSSSSSRQPO 1
	Goto Ready
	
	 SlideKickingStart:
	 MGN1 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"slideKickAngled")
	    MGN1 GHIJL 1
	    MGN1 MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM 1 { //39 total
			if (CountInv("Kicking") == 0) {
				return state("SlideKickingEnd");
			}
			return state("");
		}
		Goto Ready
    SlideKickAngled:
	MGN4 OPQRS 1
	MGN4 SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS 1 { //39 total
			if (CountInv("Kicking") == 0) {
				return state("SlideKickingEnd");
			}
			return state("");
		}
		Goto Ready

	 SlideKickingEnd:
	 MGN1 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"slideKickAngledEnd")
	    MGN1 MMMMMLJIHG 1 //10
	    Goto Ready
	SlideKickAngledEnd:
	MGN4 SSSSSSRQPO 1
	Goto Ready
	
	FuckYouFlash:
//	MGN3 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"fuckyouflash2")
	MGN1 GHIJLMMMMMMMMMMMMMMMMMMMMLJIHG 1//30 total
	stop
	//FuckYouFlash2:
	//MGN4 OPQRSSSSSSSSSSSSSSSSSSSSSSRQPO 1
	//STOP
	
	Spawn:
		MGN1 Z 1
		MGN1 Z -1
		Stop
		
		 Ready: 
		 Ready3:
		 MGN3 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,2)
		 MGN1 A 0
		 ReadyFromModeChange:
		 "####" "#" 0
		  "####" "#" 0 A_JumpIfInventory("StartDualWield",1,"DualWield")
		  "####" "#" 0 {
			if (CountInv("Kicking") == 1) {
				if (CountInv("IsCrouching") == 1) {
					return state("SlideKickingStart");
				}
				if (momZ != 0) {
					return state("AirKickingFlash");
				}
				else {
					return state("KickingFlash");
				}
			}
			return state("");
		}
		  "####" "#" 0 //ACS_NamedExecuteAlways("MGGrenadeCheck")
		  "####" "#" 1 A_WeaponReadyDX(WRF_ALLOWRELOAD)
		  goto ready3
		  "####" "#" 0 A_JumpIfInventory("Clip2",1,"Ready")
		  //Goto IdleNoAmmo
		  
		  IdleNoAmmo:
		  tnt1 a 0 a_takeinventory("MachinegunAngled",1)
		  MGN1 F 1 A_WeaponReady
		  MGN1 A 0 A_JumpIfInventory("Clip2",1,"Ready")
		  Loop
		  
	SprintOverlay:
	MGN1 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"Sprint2")

	Sprint1:
	MGN1 GHIJL 1
	MGN1 M 1
	Wait
	Sprint2:
	MGN4 OPQR 1
	MGN4 S 1
	Wait
	
	returnfromsprint:
	MGN1 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"ReturnFromSprint2")
	MGN1 LJIHG 1
	Goto ready
	
	ReturnFromSprint2:
	MGN4 RQPO 1
	Goto ready
	
		  
	
		Deselect: "####" A 0 A_TakeInventory("IsPlayingDoxMod",1)
			MGN1 A 0 A_TakeInventory ("Spin",1)
			MGN1 A 0 A_TakeInventory("TossGrenade", 1)
			MGN1 A 0 A_Takeinventory("HeavyAutomaticWeapon",1)
			MGN1 A 0 A_TakeInventory("RandomHeadExploder", 1)
			MGN1 A 0 SetPlayerProperty(0,0,0)
			"####" A 0 A_ClearOverlays(-2,-2)
			MGN3 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"DeselectAngled")
			MGS1 ABCDE 1
			TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
			TNT1 A 1 A_Lower
			Wait
        DeselectAngled:
		    MGN4 TUVWX 1
		    TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
			TNT1 A 0 A_Lower
			wait

		Select:
			TNT1 A 0
            NULL A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("LMGCrosshair"));}else{A_SetCrosshair(0);}}			
			Goto SelectFirstPersonLegs
			SelectContinue: "####" A 0 A_GiveInventory("IsPlayingDoxMod",1) 
				
			
			TNT1 A 1
			MGN1 A 0 A_Giveinventory("HeavyAutomaticWeapon",1)
			MGN1 A 0 A_Giveinventory("MinigunSelected",1)
			MGN1 A 0 A_GiveInventory("RandomHeadExploder", 1)
			TNT1 AAAAAAAAAAAAAAA 0 A_Raise
		
		SelectAnimation:
		ReturnFromNothing:
		MGN1 A 0 A_PlaySound("LMGUP")
			MGN1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			"####" A 0 A_JumpIfInventory("Clip2",1,2)
			TNT1 A 0 A_TakeInventory("MachinegunAngled",1)
			TNT1 A 0
			MGN3 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"selectAngled")
			MGS1 EDCBA 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready
		SelectAngled:
		    TNT1 A 0 A_playSound("LMGBELT",1)
		    MGN4 XWVUT 1 A_WeaponReady(WRF_NOFIRE)
			Goto Ready

		NoAmmo:
			
			CHAE AA 3 A_PlaySound("weapons/empty")
			Goto IdleNoAmmo
		NoAmmo2:
		TNT1 A 0 A_PlaySound("weapons/empty")
		MGN3 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"noammo3")
			MGN1 AA 3
			Goto Ready	
			
		NoAmmo3:
		 MGN3 QQQ 3
		 Goto Ready
			
			
		Fire:
			MGN1 A 0 A_checkifammo("clip2",1,"NoAmmo2")
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("HMGFIRE", 1)
			MGN1 A 0 A_ZoomFactor(0.98)
			TNT1 A 0// ACS_NamedExecuteAlways("MGGrenadeCheck")
			TNT1 A 0 A_JumpIf(Countinv("AngledMachineGun")==1,"FireAngled")
			TNT1 A 0 A_takeAmmo("clip2")
			TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
			
			TNT1 A 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-10,10), 0, 0, -4, 0, random(-9,9))
			"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("Clip2")<=16) { A_PlaySound("MagClick", 6); }}}
			MGN1 B 1 BRIGHT A_FireBullets(3.5, 2, -1, 20, "hITPuff", FBF_NORANDOM | FBF_USEAMMO,8192,"decorativetracer",-12)
			NULL A 0 A_WeaponOffset(random(-1,1),32+random(0,1) )
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch-0.6, SPF_INTERPOLATE)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
			//CHAF A 0 BRIGHT A_FireCustomMissile("DecorativeTracer", random(-2,2), 0, 0, -12, 0, random(-2,2))
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("MachineGunCasingSpawns",random(-2,2),0,0,-12,-18)
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN1 D 1
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN1 E 1 
			
			RIFG A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, 2)//tactical mode has muzzle climb
			RIFG A 0 A_SetPitch(pitch-2.0, SPF_INTERPOLATE)
			RIFG A 0
			
			MGN1 A 0
			MGN1 A 0 A_checkifammo("clip2",1,"NoAmmo2")
			NULL A 0 A_WeaponOffset(0,32)
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("HMGFIRE", 7)
			MGN1 A 0 A_ZoomFactor(0.98)
			TNT1 A 0 A_takeAmmo("clip2")
			TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
			TNT1 A 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-10,10), 0, 0, -4, 0, random(-9,9))	
			"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("Clip2")<=16) { A_PlaySound("MagClick", 6); }}}
			MGN1 K 1 BRIGHT A_FireBullets(3.5, 2, -1, 20, "hITPuff", FBF_NORANDOM | FBF_USEAMMO,8192,"decorativetracer",-12)
			NULL A 0 A_WeaponOffset(random(-1,1),32+random(0,1) )
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch-0.6, SPF_INTERPOLATE)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
		//	CHAF A 0 BRIGHT A_FireCustomMissile("DecorativeTracer", random(-2,2), 0, 0, -12, 0, random(-2,2))
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("MachineGunCasingSpawns",random(-2,2),0,0,-12,-18)
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN1 D 1
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN1 E 1
			NULL A 0 A_WeaponOffset(0,32)
			MGN1 A 0 A_Refire
			goto Ready
			
		FireAngled:
		TNT1 A 0 A_takeAmmo("clip2")
		TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
		TNT1 A 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-10,10), 0, 4, -1, 0, random(-9,9))
		"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("Clip2")<=16) { A_PlaySound("MagClick", 6); }}}
		    MGN3 R 1 BRIGHT A_FireBullets(4, 2, -1, 22, "hITPuff", FBF_NORANDOM | FBF_USEAMMO,8192,"decorativetracer",-4,3)
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch-0.6, SPF_INTERPOLATE)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
			//CHAF A 0 BRIGHT A_FireCustomMissile("DecorativeTracer", random(-2,2), 0, 7, -4, 0, random(-2,2))
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("MachineGunCasingSpawns",random(-2,2),0,12,-12,-18)
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN3 T 1
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN3 U 1 
			
			RIFG A 0 A_JumpIfInventory("IsNOTTacticalClass", 1, 2)//tactical mode has muzzle climb
			RIFG A 0 A_SetPitch(pitch-2.0, SPF_INTERPOLATE)
			RIFG A 0
			
			MGN1 A 0
			MGN1 A 0 A_checkifammo("clip2",1,"NoAmmo2")
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("HMGFIRE", 7)
			TNT1 A 0 A_takeAmmo("clip2")
			MGN1 A 0 A_ZoomFactor(0.98)
			TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
			TNT1 A 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-10,10), 0, 4, -1, 0, random(-9,9))
			"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("Clip2")<=16) { A_PlaySound("MagClick", 6); }}}
			MGN3 S 1 BRIGHT A_FireBullets(4, 2, -1, 25, "hITPuff", FBF_NORANDOM | FBF_USEAMMO,8192,"decorativetracer",-4,3)
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch-0.6, SPF_INTERPOLATE)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 2)// For poor PCs
			//CHAF A 0 BRIGHT A_FireCustomMissile("DecorativeTracer", random(-2,2), 0, 7, -4, 0, random(-2,2))
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("MachineGunCasingSpawns",random(-2,2),0,12,-12,-18)
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN3 T 1
			RIFG A 0 A_JumpIfInventory("NoPitch", 1, 2)
			TNT1 A 0 A_SetPitch(pitch+0.3, SPF_INTERPOLATE)
			MGN3 U 1 		
			MGN1 A 0 A_Refire
			goto Ready
			
		AltFireNoReload:
		TNT1 A 0 A_TakeInventory("FiredMGGrenade", 1)
			GOto ready
		AltFire:
			MGN1 A 0
			MGN1 A 0 A_checkifammo("AmmoRocket",1,"NoAmmo2")
			MGN1 A 0 A_JumpIfInventory("FiredMGGrenade", 1, "ReloadGrenade")
			MGN1 A 0 A_PlaySound("weapons/firegrenade")
			TNT1 A 0 //ACS_NamedExecuteAlways("MGGrenadeCheck")
			MGN1 A 0 A_FireCustomMissile("RedFlareSpawn",-5,0,0,0)		
			MGN1 A 0 A_takeAmmo("ammoRocket",1)
			MGN2 A 0 BRIGHT A_FireCustomMissile("ShortGrenade", 0, 1, 0, 0)
			MGN1 A 0 A_SetPitch(-5.0 + pitch, SPF_INTERPOLATE)
			//MGN1 A 0 A_Recoil(3*cos(pitch))
			SHTZ A 0 
		{
		A_Recoil(1*cos(pitch));
		  if(momZ != 0)
		  {
		  ThrustThingZ(0,pitch/3,0,1);
		  }
		else
		  {
		  ThrustThingZ(0,pitch/4,0,1);
		  }
		}
			MGN1 A 0 A_jumpifinventory("powerspeed2",1,2)
			MGN1 A 0 A_GiveInventory("FiredMGGrenade", 1)
			TNT1 A 0 A_JumpIf(Countinv("AngledMachineGun")==1,"AltFireAngled")
		TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 8)// For poor PCs
			TNT1 AAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9))
		    TNT1 AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9))
			MGN2 BC 1 BRIGHT A_SetPitch(1.0 + pitch, SPF_INTERPOLATE)
			MGN2 DEF 1 A_SetPitch(1.0 + pitch, SPF_INTERPOLATE)
			
			TNT1 A 0 //ACS_NamedExecuteAlways("MGGrenadeCheck")
			MGN1 A 10
			MGN1 A 0 A_Refire
			goto Ready
		
		AltFireAngled:
		    TNT1 A 0 A_JumpIfInventory("NoFancyShooting", 1, 8)// For poor PCs
		    TNT1 AAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -9, 0, 0, random(-9,9))
		    TNT1 AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -9, 0, 0, random(-9,9))
		    MGN3 VW 1 BRIGHT A_SetPitch(1.0 + pitch, SPF_INTERPOLATE)
			MGN3 XXY 1 A_SetPitch(1.0 + pitch, SPF_INTERPOLATE)
			MGN1 A 0 A_jumpifinventory("powerspeed2",1,2)
			MGN1 A 0 A_GiveInventory("FiredMGGrenade", 1)
			TNT1 A 0// ACS_NamedExecuteAlways("MGGrenadeCheck")
			MGN3 Z 1
			MGN3 "[" 1
			MGN3 "\" 1
			MGN3 Q 8
			MGN1 A 0 A_Refire
			Goto Ready
		Reload:
			//MGN1 A 1
			MGN1 A 0 A_TakeInventory("Reloading", 1)
			MGN1 A 0 A_JumpIfInventory("FiredMGGrenade", 1, "ReloadGrenade")
			Goto Fidget
		ReloadGrenade:
		    TNT1 A 0 A_JumpIf(Countinv("AngledMachineGun")==1,"ReloadAngled")
			MGN1 A 0
			XXXX X 0 A_PlaySound("foley/MGMoveBeforeGrenadeReload",10) 
			MGN2 GHIJ 1
			 XXXX X 0 A_StartSound("foley/MGopenTube",10,0,0.9) 
			MGN1 A 0 A_PlaySound("GRLLO1")
			MGN2 K 1
			NULL A 0 A_FireCustomMissile("GrenadeCasingSpawner",200,0,-4, -10, 2, -30)	
			MGN2 L 5
			MGN2 MMNO 1
			MGN2 P 10
			MGN2 QRSS 1
			MGN2 T 7			
			MGN2 UU 1
			//MGN1 A 0 A_PlaySound("insertshell")
			MGN1 A 0 A_PlaySound("LMGREL")
			
			MGN1 A 0 A_TakeInventory("FiredMGGrenade", 1)
			MGN2 VWW 1
			MGN2 X 2
			MGN2 X 2
			MGN2 YYZ 1
			MGN3 AB 1
			MGN3 C 2
			XXXX X 0 A_StartSound("foley/MGCloseTube",10,0,0.9) 
			MGN1 A 0 A_PlaySound("GRLLO2") 
			MGN3 D 1
			XXXX X 0 A_PlaySound("foley/MGMoveAfterGrenadeReload",10) 
			MGN3 EFGH 1
			MGN1 A 0 A_Refire
			Goto Ready
		ReloadAngled:
			MGN4 BCDEFGH 1
			MGN1 A 0 A_PlaySound("GRLLO1")
			MGN4 IJK 1
			MGN2 L 4
			MGN2 MMNO 1
			MGN2 P 6
			MGN2 QRSS 1
			MGN2 T 5			
			MGN2 UU 1
			//MGN1 A 0 A_PlaySound("insertshell")
			MGN1 A 0 A_PlaySound("LMGREL")
			
			MGN1 A 0 A_TakeInventory("FiredMGGrenade", 1)
			MGN2 VWW 1
			MGN2 X 2
			MGN2 X 1
			MGN2 YYZ 1
			MGN3 A 1
			MGN4 LM 1
			MGN1 A 0 A_PlaySound("GRLLO2")
			MGN4 N 1
			MGN4 JIIHGF 1
			TNT1 A 0 A_playSound("LMGBELT")
			MGN4 EDCB 1 
			MGN1 A 0 A_Refire
			Goto Ready
		
		Fidget:
			MGN3 Q 0 A_JumpIf(Countinv("AngledMachineGun")==1,"FidgetAngled")
			MGN1 A 0 A_TakeInventory("Reloading", 1)
			MGN1 A 0 A_JumpIfInventory("Clip2", 1, 2)
			Goto Ready
			TNT1 AA 0
			XXXX X 0 A_PlaySound("foley/MGinsertBelt",10) 
			MGS1 FGIJKL 1 A_WeaponReady
			MGS1 M 5 A_WeaponReady
			TNT1 A 0 A_PlaySound("foley/MGboltPull")
			MGS1 NOPP 1 A_WeaponReady
			MGS1 Q 6 A_WeaponReady
			MGS1 RST 1 A_WeaponReady
			//MGS1 H 3 A_WeaponReady(WRF_ALLOWRELOAD)
			MGS1 GF 1 A_WeaponReady
			MGN1 A 0 A_TakeInventory("Reloading", 1)
			Goto Ready
		FidgetAngled:
		MGN3 P 1
		TNT1 A 0 A_playSound("LMGBELT")
		MGN3 ONMLKJIH 1
		
		MGS1 FGIJKL 1 A_WeaponReady
		MGS1 M 5 A_WeaponReady
		TNT1 A 0 A_PlaySound("LMGISPCT")
		MGS1 NOP 1 A_WeaponReady
		MGS1 Q 6 A_WeaponReady
		MGS1 RST 1 A_WeaponReady
		MGS1 GF 1 A_WeaponReady
		
		MGN3 HIJK 1
		TNT1 A 0 A_playSound("LMGBELT")
		MGN3 LMNOP 1
		MGN1 A 0 A_TakeInventory("Reloading", 1)
		Goto Ready
		
		
		DualWield:
		TNT1 A 0 A_JumpIf(Countinv("AngledMachineGun")==1,"BackToCentered")
		NULL A 0 A_giveinventory("angledmachinegun",1)
		MGN3 HIJK 1
		TNT1 A 0 A_playSound("LMGBELT")
		MGN3 LMNOP 1
		//TNT1 A 0 A_GiveInventory("MachinegunAngled",1)
		
		TNT1 A 0 A_TakeInventory("StartDualWield",1)
		MGN3 Q 0
		Goto Readyfrommodechange
		BackToCentered:
		NULL A 0 A_takeinventory("angledmachinegun",1)
		MGN3 P 1
		TNT1 A 0 A_playSound("LMGBELT")
		MGN3 ONMLKJIH 1
		//TNT1 A 0 A_TakeInventory("MachinegunAngled",1)
		
		TNT1 A 0 A_TakeInventory("StartDualWield",1)
		MGN1 A 0
		Goto Readyfrommodechange
		
		}
}
ACTOR MachinegunAngled: Inventory {inventory.maxamount 1}
